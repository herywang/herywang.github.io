(function(){"use strict";var a={4833:function(a,n,t){var c=t(9242),s=t(6520),d=(t(4415),t(3396));const e={class:"common-layout"},o=(0,d._)("div",{class:"grid-content bg-purple-dark"},"Herywang Blogs",-1),p=(0,d.Uk)("首页"),u=(0,d.Uk)("Spring源码阅读"),l=(0,d.Uk)(" Apache-Shrio源码阅读 "),i=(0,d._)("span",{style:{"font-size":"18px"}},[(0,d._)("b",null,"Java基础相关")],-1),r=(0,d.Uk)("Java常用包"),v=(0,d._)("span",{style:{"font-size":"18px"}},[(0,d._)("b",null,"Spring源码阅读")],-1),k=(0,d.Uk)("Spring IOC"),f=(0,d.Uk)("FactoryBean系列"),h=(0,d.Uk)("BeanPostProcessor"),m=(0,d.Uk)("Spring事务"),g=(0,d._)("span",{style:{"font-size":"18px"}},[(0,d._)("b",null,"Apache-Shiro源码阅读")],-1),w=(0,d.Uk)("认证(Authentication)"),y=(0,d.Uk)("授权(Authorization)"),F=(0,d.Uk)("Session管理"),b=(0,d.Uk)(" Hadoop源码阅读 "),_=(0,d.Uk)("Option 1"),S=(0,d.Uk)("Option 2"),A=(0,d.Uk)("Option 3"),B=(0,d.Uk)("Option 4"),W=(0,d.Uk)("Option 4-1"),E={id:"index1",class:"java_1",style:{display:"none"}},q={id:"index2",class:""};function x(a,n,t,c,s,x){const j=(0,d.up)("el-col"),D=(0,d.up)("el-row"),O=(0,d.up)("el-button"),M=(0,d.up)("el-header"),U=(0,d.up)("edit"),C=(0,d.up)("el-icon"),P=(0,d.up)("el-menu-item"),z=(0,d.up)("el-sub-menu"),H=(0,d.up)("orange"),I=(0,d.up)("el-menu-item-group"),L=(0,d.up)("lock"),R=(0,d.up)("setting"),J=(0,d.up)("el-menu"),N=(0,d.up)("el-scrollbar"),T=(0,d.up)("el-aside"),Z=(0,d.up)("HelloWorld"),G=(0,d.up)("ApacheShiroNote1"),K=(0,d.up)("el-main"),Q=(0,d.up)("el-container");return(0,d.wg)(),(0,d.iD)("div",e,[(0,d.Wm)(Q,null,{default:(0,d.w5)((()=>[(0,d.Wm)(M,{style:{"border-radius":"5px"}},{default:(0,d.w5)((()=>[(0,d.Wm)(D,null,{default:(0,d.w5)((()=>[(0,d.Wm)(j,{span:24,style:{"padding-top":"10px","font-size":"30px","text-align":"left"}},{default:(0,d.w5)((()=>[o])),_:1})])),_:1}),(0,d.Wm)(D,{style:{width:"600px","margin-top":"10px"}},{default:(0,d.w5)((()=>[(0,d.Wm)(j,{span:2},{default:(0,d.w5)((()=>[(0,d.Wm)(O,{round:""},{default:(0,d.w5)((()=>[p])),_:1})])),_:1}),(0,d.Wm)(j,{span:8},{default:(0,d.w5)((()=>[(0,d.Wm)(O,{round:""},{default:(0,d.w5)((()=>[u])),_:1})])),_:1}),(0,d.Wm)(j,{span:6},{default:(0,d.w5)((()=>[(0,d.Wm)(O,{round:""},{default:(0,d.w5)((()=>[l])),_:1})])),_:1})])),_:1})])),_:1}),(0,d.Wm)(Q,null,{default:(0,d.w5)((()=>[(0,d.Wm)(T,{style:{"margin-top":"-40px","margin-left":"10px","border-radius":"5px",height:"100%"}},{default:(0,d.w5)((()=>[(0,d.Wm)(N,null,{default:(0,d.w5)((()=>[(0,d.Wm)(J,{"default-openeds":["0"]},{default:(0,d.w5)((()=>[(0,d.Wm)(z,{index:"0"},{title:(0,d.w5)((()=>[(0,d.Wm)(C,null,{default:(0,d.w5)((()=>[(0,d.Wm)(U)])),_:1}),i])),default:(0,d.w5)((()=>[(0,d.Wm)(P,{index:"0-1"},{default:(0,d.w5)((()=>[r])),_:1})])),_:1}),(0,d.Wm)(z,{index:"1"},{title:(0,d.w5)((()=>[(0,d.Wm)(C,null,{default:(0,d.w5)((()=>[(0,d.Wm)(H)])),_:1}),v])),default:(0,d.w5)((()=>[(0,d.Wm)(I,null,{title:(0,d.w5)((()=>[k])),default:(0,d.w5)((()=>[(0,d.Wm)(P,{index:"1-1"},{default:(0,d.w5)((()=>[f])),_:1}),(0,d.Wm)(P,{index:"1-2"},{default:(0,d.w5)((()=>[h])),_:1})])),_:1}),(0,d.Wm)(I,{title:"Spring AOP"},{default:(0,d.w5)((()=>[(0,d.Wm)(P,{index:"1-3"},{default:(0,d.w5)((()=>[m])),_:1})])),_:1})])),_:1}),(0,d.Wm)(z,{index:"2"},{title:(0,d.w5)((()=>[(0,d.Wm)(C,null,{default:(0,d.w5)((()=>[(0,d.Wm)(L)])),_:1}),g])),default:(0,d.w5)((()=>[(0,d.Wm)(P,{index:"2-1"},{default:(0,d.w5)((()=>[w])),_:1}),(0,d.Wm)(P,{index:"2-2"},{default:(0,d.w5)((()=>[y])),_:1}),(0,d.Wm)(P,{index:"2-3"},{default:(0,d.w5)((()=>[F])),_:1})])),_:1}),(0,d.Wm)(z,{index:"3"},{title:(0,d.w5)((()=>[(0,d.Wm)(C,null,{default:(0,d.w5)((()=>[(0,d.Wm)(R)])),_:1}),b])),default:(0,d.w5)((()=>[(0,d.Wm)(P,{index:"3-1"},{default:(0,d.w5)((()=>[_])),_:1}),(0,d.Wm)(P,{index:"3-2"},{default:(0,d.w5)((()=>[S])),_:1}),(0,d.Wm)(I,{title:"Group 2"},{default:(0,d.w5)((()=>[(0,d.Wm)(P,{index:"3-3"},{default:(0,d.w5)((()=>[A])),_:1})])),_:1}),(0,d.Wm)(z,{index:"3-4"},{title:(0,d.w5)((()=>[B])),default:(0,d.w5)((()=>[(0,d.Wm)(P,{index:"3-4-1"},{default:(0,d.w5)((()=>[W])),_:1})])),_:1})])),_:1})])),_:1})])),_:1})])),_:1}),(0,d.Wm)(K,null,{default:(0,d.w5)((()=>[(0,d._)("div",E,[(0,d.Wm)(Z)]),(0,d._)("div",q,[(0,d.Wm)(G)])])),_:1})])),_:1})])),_:1})])}const j={class:"mume markdown-preview"},D=(0,d.uE)('<h2 class="mume-header" id="java%E5%B8%B8%E7%94%A8%E5%8C%85%E5%BD%92%E7%BA%B3">Java常用包归纳</h2><p>knife4j: 集成Swagger的接口生成、管理工具包<br> Apache thrift: 用于可伸缩的跨语言服务开发<br> Apache Lucene: 全文索引检索工具包, Solr就是基于其开发的<br> mapstruct: 类似CommonBeanUtils中的copyProperties()方法，但其能够指定相应的字段映射（<a href="https://mapstruct.org/%EF%BC%89">https://mapstruct.org/）</a><br> metric: 性能监控框架（<a href="https://metrics.dropwizard.io/4.2.0/manual/core.html%EF%BC%89">https://metrics.dropwizard.io/4.2.0/manual/core.html）</a><br> objenesis: 通过类实例化一个对象，类似JDK中Class.newInstance()，其在功能上进行了增强，能够实例化有参构造、有副作用的构造器、抛异常的构造器（<a href="http://objenesis.org/%EF%BC%89">http://objenesis.org/）</a><br> opencsv: 一个操作csv文件的library（<a href="http://opencsv.sourceforge.net/#quick_start">http://opencsv.sourceforge.net/#quick_start</a>)<br> reflections: 获取classpath下的类信息、方法信息、字段信息<br> Apache shiro: 轻量级认证、授权框架<br> snappy-java: 快速的压缩library，通过JNI 调用google sanppy<br> byte-buddy: 操作字节的库<br> jline: 处理控制台输入输出的库<br> HikariCP: 性能最好的连接池</p>',2),O=[D];function M(a,n,t,c,s,e){return(0,d.wg)(),(0,d.iD)("div",j,O)}var U={name:"HelloWorld"},C=t(89);const P=(0,C.Z)(U,[["render",M]]);var z=P,H=t.p+"img/note2.1.d5f8bc42.jpg",I=t.p+"img/note2.2.db9274ad.png",L=t.p+"img/spring1.256a74a5.png",R=t.p+"img/note2.5.5ef1fd77.jpg",J=t.p+"img/note2.3.c1e172be.jpg",N=t.p+"img/note2.4.870330c7.jpg";const T={class:"mume markdown-preview"},Z=(0,d.uE)('<h1 class="mume-header" id="apache-shiro%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB" data-v-0c5d14dc>Apache Shiro源码阅读</h1><p data-v-0c5d14dc>最近在腾讯实习参与开发Apache-InLong开源项目，其中负责的模块使用到了apache-shiro对访问权限进行控制，因此顺便把Apache-Shiro部分源码进行阅读。</p><h2 class="mume-header" id="1-authorization%E6%8E%88%E6%9D%83%E6%8E%A5%E5%8F%A3%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6-%E5%92%8C-authentication%E8%AE%A4%E8%AF%81%E7%99%BB%E9%99%86%E5%9F%BA%E7%A1%80" data-v-0c5d14dc>1. Authorization(授权，接口访问控制) 和 Authentication(认证，登陆)基础</h2><p data-v-0c5d14dc>Apache-Shiro中对接口访问控制最常用的两种配置是：<code data-v-0c5d14dc>anno</code>和<code data-v-0c5d14dc>authc</code>, 其中每种配置都代表一个过滤器，接口如果配置<code data-v-0c5d14dc>authc</code>表示当前接口需要登录才能访问, <code data-v-0c5d14dc>anno</code>表示无需什么特殊权限就能够访问. Spring-Boot中具体如何整合Apache-shiro进行权限控制的这里就不在赘述, 我们从入口处看起:</p><pre data-role="codeBlock" data-info="java" class="language-java" data-v-0c5d14dc>    <span class="token annotation punctuation" data-v-0c5d14dc>@Bean</span>\n    <span class="token keyword keyword-public" data-v-0c5d14dc>public</span> <span class="token class-name" data-v-0c5d14dc>ShiroFilterFactoryBean</span> <span class="token function" data-v-0c5d14dc>shiroFilter</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>SecurityManager</span> securityManager<span class="token punctuation" data-v-0c5d14dc>)</span> <span class="token punctuation" data-v-0c5d14dc>{</span>\n        <span class="token keyword keyword-return" data-v-0c5d14dc>return</span> inLongShiro<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>getShiroFilter</span><span class="token punctuation" data-v-0c5d14dc>(</span>securityManager<span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n    <span class="token punctuation" data-v-0c5d14dc>}</span>\n</pre><p data-v-0c5d14dc>默认情况下<code data-v-0c5d14dc>authc</code>对应的过滤器是: <code data-v-0c5d14dc>org.apache.shiro.web.filter.authc.FormAuthenticationFilter</code>, 点进入源码中会发现这个过滤器的实现类继承了一大堆东西, 一层又一层的, 非常复杂, 但是我们最终的目的就是实现一个<code data-v-0c5d14dc>Filter</code>接口就行了,<br data-v-0c5d14dc> 在Apache-Inlong开源项目中我们就自定义了<code data-v-0c5d14dc>authc</code>的过滤器<code data-v-0c5d14dc>AuthenticationFilter.class</code></p><pre data-role="codeBlock" data-info="java" class="language-java" data-v-0c5d14dc>    <span class="token annotation punctuation" data-v-0c5d14dc>@Override</span>\n    <span class="token keyword keyword-public" data-v-0c5d14dc>public</span> <span class="token class-name" data-v-0c5d14dc>ShiroFilterFactoryBean</span> <span class="token function" data-v-0c5d14dc>getShiroFilter</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>SecurityManager</span> securityManager<span class="token punctuation" data-v-0c5d14dc>)</span> <span class="token punctuation" data-v-0c5d14dc>{</span>\n        <span class="token class-name" data-v-0c5d14dc>ShiroFilterFactoryBean</span> shiroFilterFactoryBean <span class="token operator" data-v-0c5d14dc>=</span> <span class="token keyword keyword-new" data-v-0c5d14dc>new</span> <span class="token class-name" data-v-0c5d14dc>ShiroFilterFactoryBean</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        shiroFilterFactoryBean<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>setSecurityManager</span><span class="token punctuation" data-v-0c5d14dc>(</span>securityManager<span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        <span class="token comment" data-v-0c5d14dc>// anon: can be accessed by anyone, authc: only authentication is successful can be accessed</span>\n        <span class="token class-name" data-v-0c5d14dc>Map</span><span class="token generics" data-v-0c5d14dc><span class="token punctuation" data-v-0c5d14dc>&lt;</span><span class="token class-name" data-v-0c5d14dc>String</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token class-name" data-v-0c5d14dc>Filter</span><span class="token punctuation" data-v-0c5d14dc>&gt;</span></span> filters <span class="token operator" data-v-0c5d14dc>=</span> <span class="token keyword keyword-new" data-v-0c5d14dc>new</span> <span class="token class-name" data-v-0c5d14dc>LinkedHashMap</span><span class="token generics" data-v-0c5d14dc><span class="token punctuation" data-v-0c5d14dc>&lt;</span><span class="token punctuation" data-v-0c5d14dc>&gt;</span></span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        filters<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>put</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token string" data-v-0c5d14dc>&quot;authc&quot;</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token keyword keyword-new" data-v-0c5d14dc>new</span> <span class="token class-name" data-v-0c5d14dc>AuthenticationFilter</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        shiroFilterFactoryBean<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>setFilters</span><span class="token punctuation" data-v-0c5d14dc>(</span>filters<span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        <span class="token class-name" data-v-0c5d14dc>Map</span><span class="token generics" data-v-0c5d14dc><span class="token punctuation" data-v-0c5d14dc>&lt;</span><span class="token class-name" data-v-0c5d14dc>String</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token class-name" data-v-0c5d14dc>String</span><span class="token punctuation" data-v-0c5d14dc>&gt;</span></span> pathDefinitions <span class="token operator" data-v-0c5d14dc>=</span> <span class="token keyword keyword-new" data-v-0c5d14dc>new</span> <span class="token class-name" data-v-0c5d14dc>LinkedHashMap</span><span class="token generics" data-v-0c5d14dc><span class="token punctuation" data-v-0c5d14dc>&lt;</span><span class="token punctuation" data-v-0c5d14dc>&gt;</span></span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        <span class="token comment" data-v-0c5d14dc>// login, register request</span>\n        pathDefinitions<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>put</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token string" data-v-0c5d14dc>&quot;/anno/**/*&quot;</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token string" data-v-0c5d14dc>&quot;anon&quot;</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n\n        <span class="token comment" data-v-0c5d14dc>// swagger api</span>\n        pathDefinitions<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>put</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token string" data-v-0c5d14dc>&quot;/doc.html&quot;</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token string" data-v-0c5d14dc>&quot;anon&quot;</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        pathDefinitions<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>put</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token string" data-v-0c5d14dc>&quot;/v2/api-docs/**/**&quot;</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token string" data-v-0c5d14dc>&quot;anon&quot;</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        pathDefinitions<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>put</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token string" data-v-0c5d14dc>&quot;/webjars/**/*&quot;</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token string" data-v-0c5d14dc>&quot;anon&quot;</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        pathDefinitions<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>put</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token string" data-v-0c5d14dc>&quot;/swagger-resources/**/*&quot;</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token string" data-v-0c5d14dc>&quot;anon&quot;</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        pathDefinitions<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>put</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token string" data-v-0c5d14dc>&quot;/swagger-resources&quot;</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token string" data-v-0c5d14dc>&quot;anon&quot;</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n\n        <span class="token comment" data-v-0c5d14dc>// openapi</span>\n        pathDefinitions<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>put</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token string" data-v-0c5d14dc>&quot;/openapi/**/*&quot;</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token string" data-v-0c5d14dc>&quot;anon&quot;</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        pathDefinitions<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>put</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token string" data-v-0c5d14dc>&quot;/**&quot;</span><span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token string" data-v-0c5d14dc>&quot;authc&quot;</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        shiroFilterFactoryBean<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>setFilterChainDefinitionMap</span><span class="token punctuation" data-v-0c5d14dc>(</span>pathDefinitions<span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        <span class="token keyword keyword-return" data-v-0c5d14dc>return</span> shiroFilterFactoryBean<span class="token punctuation" data-v-0c5d14dc>;</span>\n    <span class="token punctuation" data-v-0c5d14dc>}</span>\n\n</pre><p data-v-0c5d14dc>Apache-Shiro的生命周期从Spring的Configure类中通过注入<code data-v-0c5d14dc>ShiroFilterFactoryBean</code>类开始, 其初始化需要依赖<code data-v-0c5d14dc>CredentialsMatcher</code>, <code data-v-0c5d14dc>SecurityManager</code> 以及自定义的 <code data-v-0c5d14dc>AuthorizingRealm</code>等类信息, 类之间的聚合关系如下图所示:<br data-v-0c5d14dc><img src="'+H+'" alt="UML图" data-v-0c5d14dc><br data-v-0c5d14dc> 显然可见, ShiroFilterFactoryBean就是一个过滤器链, 里面具体怎么实现靠用户自定义的securityManager等相关类中的逻辑实现.</p><h2 class="mume-header" id="2-%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90shirofilterfactorybean" data-v-0c5d14dc>2. 深度剖析ShiroFilterFactoryBean</h2><p data-v-0c5d14dc>先看一下其实现的接口:</p><img src="'+I+'" width="400px/" data-v-0c5d14dc><p data-v-0c5d14dc>看到第一个接口<code data-v-0c5d14dc>FactoryBean</code>相信阅读多Spring源码的童鞋都不会太陌生, 这个时候第一想到的就是看看<code data-v-0c5d14dc>ShiroFilterFactoryBean</code>中的<code data-v-0c5d14dc>getObject()</code>方法.</p><blockquote data-v-0c5d14dc><p data-v-0c5d14dc>(不熟悉FactoryBean接口的童鞋参考下我的另一篇文章:<a href="./spring/factorybean.md" data-v-0c5d14dc>关于FactoryBean的那些事</a>)</p></blockquote><p data-v-0c5d14dc>在<code data-v-0c5d14dc>getObject</code>方法中会调用<code data-v-0c5d14dc>createInstance()</code>来初始化一个<code data-v-0c5d14dc>AbstractShiroFilter</code>实例, 具体的实现类是<code data-v-0c5d14dc>SpringShiroFilter</code>, 并且将我们自定义的<code data-v-0c5d14dc>SecurityManager</code>作为参数传递到<code data-v-0c5d14dc>SpringShrioFilter</code>实例中.<br data-v-0c5d14dc><img src="'+L+'" width="80%/" data-v-0c5d14dc><br data-v-0c5d14dc> 在上图代码的459行: <code data-v-0c5d14dc>createFilterChainManager()</code>方法中会初始化DefaultFilterChainManager类, 这个类的构造方法最后一行<code data-v-0c5d14dc>createDefaultFilters(false)</code>中便能够发现Apache-shiro框架中各个默认的过滤器:</p><pre data-role="codeBlock" data-info="java" class="language-java" data-v-0c5d14dc><span class="token keyword keyword-class" data-v-0c5d14dc>class</span> <span class="token class-name" data-v-0c5d14dc>DefaultFilterChainManager</span><span class="token punctuation" data-v-0c5d14dc>{</span><span class="token punctuation" data-v-0c5d14dc>}</span>\n    <span class="token keyword keyword-protected" data-v-0c5d14dc>protected</span> <span class="token keyword keyword-void" data-v-0c5d14dc>void</span> <span class="token function" data-v-0c5d14dc>addDefaultFilters</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token keyword keyword-boolean" data-v-0c5d14dc>boolean</span> init<span class="token punctuation" data-v-0c5d14dc>)</span> <span class="token punctuation" data-v-0c5d14dc>{</span>\n        <span class="token keyword keyword-for" data-v-0c5d14dc>for</span> <span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>DefaultFilter</span> defaultFilter <span class="token operator" data-v-0c5d14dc>:</span> <span class="token class-name" data-v-0c5d14dc>DefaultFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>values</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>)</span> <span class="token punctuation" data-v-0c5d14dc>{</span>\n            <span class="token function" data-v-0c5d14dc>addFilter</span><span class="token punctuation" data-v-0c5d14dc>(</span>defaultFilter<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>name</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span> defaultFilter<span class="token punctuation" data-v-0c5d14dc>.</span><span class="token function" data-v-0c5d14dc>newInstance</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span> init<span class="token punctuation" data-v-0c5d14dc>,</span> <span class="token boolean" data-v-0c5d14dc>false</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n        <span class="token punctuation" data-v-0c5d14dc>}</span>\n    <span class="token punctuation" data-v-0c5d14dc>}</span>\n    <span class="token punctuation" data-v-0c5d14dc>.</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token punctuation" data-v-0c5d14dc>.</span>\n<span class="token punctuation" data-v-0c5d14dc>}</span>\n\n<span class="token keyword keyword-public" data-v-0c5d14dc>public</span> <span class="token keyword keyword-enum" data-v-0c5d14dc>enum</span> <span class="token class-name" data-v-0c5d14dc>DefaultFilter</span> <span class="token punctuation" data-v-0c5d14dc>{</span>\n    <span class="token function" data-v-0c5d14dc>anon</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>AnonymousFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>authc</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>FormAuthenticationFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>authcBasic</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>BasicHttpAuthenticationFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>authcBearer</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>BearerHttpAuthenticationFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>logout</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>LogoutFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>noSessionCreation</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>NoSessionCreationFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>perms</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>PermissionsAuthorizationFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>port</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>PortFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>rest</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>HttpMethodPermissionFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>roles</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>RolesAuthorizationFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>ssl</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>SslFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>user</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>UserFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>,</span>\n    <span class="token function" data-v-0c5d14dc>invalidRequest</span><span class="token punctuation" data-v-0c5d14dc>(</span><span class="token class-name" data-v-0c5d14dc>InvalidRequestFilter</span><span class="token punctuation" data-v-0c5d14dc>.</span><span class="token keyword keyword-class" data-v-0c5d14dc>class</span><span class="token punctuation" data-v-0c5d14dc>)</span><span class="token punctuation" data-v-0c5d14dc>;</span>\n<span class="token punctuation" data-v-0c5d14dc>}</span>\n</pre><p data-v-0c5d14dc>以及如何加载我们用户自定义的过滤器:</p><img src="'+R+'" style="width:50%;" data-v-0c5d14dc><p data-v-0c5d14dc>初始化完成全部过滤器之后<code data-v-0c5d14dc>ShiroFilterFactoryBean</code> 这个 <strong data-v-0c5d14dc>Bean</strong> 最终返回的是一个SpringShiroFilter过滤器对象, 因此毫无疑问, 直接找这个类中的<code data-v-0c5d14dc>doFilter()</code>方法, 看下其具体调用执行逻辑(当然你也可以直接使用IDEA工具打断点, 然后访问某个被过滤器拦截的URL, 这样跟着程序跑一下理解的会更加深刻).</p><p data-v-0c5d14dc>看一下<code data-v-0c5d14dc>SpringShiroFilter</code>类结构:</p><img src="'+J+'" style="width:400px;" data-v-0c5d14dc><p data-v-0c5d14dc>由于<code data-v-0c5d14dc>SpringShiroFilter</code>中只有一个构造方法, 因此直接往上面继承的类中找<code data-v-0c5d14dc>doFilter()</code>实现方法, 最终在父类<code data-v-0c5d14dc>OncePerRequestFilter</code>类中看到了<code data-v-0c5d14dc>doFilter()</code>的实现:</p><img src="'+N+'" data-v-0c5d14dc><p data-v-0c5d14dc>到此为止Apache-Shiro整个过滤器链路相信基本上彻底清楚了.</p>',23),G=[Z];function K(a,n,t,c,s,e){return(0,d.wg)(),(0,d.iD)("div",T,G)}var Q={name:"ApacheShiroNote1"};const V=(0,C.Z)(Q,[["render",K],["__scopeId","data-v-0c5d14dc"]]);var X=V,Y={name:"App",data(){return{java_1:"none",apache_shiro_1:"none"}},components:{HelloWorld:z,ApacheShiroNote1:X}};const $=(0,C.Z)(Y,[["render",x]]);var aa=$,na=t(6598),ta=(0,c.ri)(aa);Object.keys(na).forEach((a=>{ta.component(a,na[a])})),ta.use(s.Z),ta.mount("#app")}},n={};function t(c){var s=n[c];if(void 0!==s)return s.exports;var d=n[c]={exports:{}};return a[c].call(d.exports,d,d.exports,t),d.exports}t.m=a,function(){var a=[];t.O=function(n,c,s,d){if(!c){var e=1/0;for(l=0;l<a.length;l++){c=a[l][0],s=a[l][1],d=a[l][2];for(var o=!0,p=0;p<c.length;p++)(!1&d||e>=d)&&Object.keys(t.O).every((function(a){return t.O[a](c[p])}))?c.splice(p--,1):(o=!1,d<e&&(e=d));if(o){a.splice(l--,1);var u=s();void 0!==u&&(n=u)}}return n}d=d||0;for(var l=a.length;l>0&&a[l-1][2]>d;l--)a[l]=a[l-1];a[l]=[c,s,d]}}(),function(){t.n=function(a){var n=a&&a.__esModule?function(){return a["default"]}:function(){return a};return t.d(n,{a:n}),n}}(),function(){t.d=function(a,n){for(var c in n)t.o(n,c)&&!t.o(a,c)&&Object.defineProperty(a,c,{enumerable:!0,get:n[c]})}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(a){if("object"===typeof window)return window}}()}(),function(){t.o=function(a,n){return Object.prototype.hasOwnProperty.call(a,n)}}(),function(){t.r=function(a){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})}}(),function(){t.p="/"}(),function(){var a={143:0};t.O.j=function(n){return 0===a[n]};var n=function(n,c){var s,d,e=c[0],o=c[1],p=c[2],u=0;if(e.some((function(n){return 0!==a[n]}))){for(s in o)t.o(o,s)&&(t.m[s]=o[s]);if(p)var l=p(t)}for(n&&n(c);u<e.length;u++)d=e[u],t.o(a,d)&&a[d]&&a[d][0](),a[d]=0;return t.O(l)},c=self["webpackChunkherywang_blog"]=self["webpackChunkherywang_blog"]||[];c.forEach(n.bind(null,0)),c.push=n.bind(null,c.push.bind(c))}();var c=t.O(void 0,[998],(function(){return t(4833)}));c=t.O(c)})();
//# sourceMappingURL=app.316ebd5c.js.map