(function(){"use strict";var a={2544:function(a,n,e){var t=e(9242),s=e(6520),c=(e(4415),e(3396)),o=e.p+"img/head.1a9821bc.jpeg";const p={class:"common-layout"},b=(0,c._)("div",{class:"grid-content bg-purple-dark"},"Herywang Blogs",-1),u=(0,c._)("div",{style:{position:"absolute",float:"right",right:"10px",top:"10px"}},[(0,c._)("img",{src:o,style:{width:"100px",height:"100px",float:"right","border-radius":"30px"}})],-1),i=(0,c.Uk)("首页"),d=(0,c.Uk)("Spring源码阅读"),l=(0,c.Uk)(" Apache-Shrio源码阅读 "),r=(0,c._)("span",{style:{"font-size":"18px"}},[(0,c._)("b",null,"Java基础相关")],-1),v=(0,c.Uk)("Java常用包"),k=(0,c._)("span",{style:{"font-size":"18px"}},[(0,c._)("b",null,"Spring源码阅读")],-1),f=(0,c.Uk)("Spring IOC"),h=(0,c.Uk)("FactoryBean系列"),m=(0,c.Uk)("BeanPostProcessor"),g=(0,c.Uk)("Spring事务"),w=(0,c._)("span",{style:{"font-size":"18px"}},[(0,c._)("b",null,"Apache-Shiro源码阅读")],-1),y=(0,c.Uk)("认证(Authentication)"),F=(0,c.Uk)("授权(Authorization)"),_=(0,c.Uk)("Session管理"),x=(0,c.Uk)(" Hadoop源码阅读 "),S=(0,c.Uk)("Option 1"),A=(0,c.Uk)("Option 2"),B=(0,c.Uk)("Option 3"),W=(0,c.Uk)("Option 4"),q=(0,c.Uk)("Option 4-1"),E=(0,c.Uk)(" 八股文面试 "),j=(0,c.Uk)("Redis篇"),C=(0,c.Uk)("Java基础"),U=(0,c.Uk)("计算机网络"),D=(0,c.Uk)("操作系统");function O(a,n,e,t,s,o){const O=(0,c.up)("el-col"),M=(0,c.up)("el-row"),P=(0,c.up)("el-button"),z=(0,c.up)("el-header"),I=(0,c.up)("edit"),L=(0,c.up)("el-icon"),Z=(0,c.up)("el-menu-item"),H=(0,c.up)("el-sub-menu"),J=(0,c.up)("orange"),R=(0,c.up)("el-menu-item-group"),T=(0,c.up)("lock"),N=(0,c.up)("setting"),G=(0,c.up)("collection"),K=(0,c.up)("el-menu"),Q=(0,c.up)("el-scrollbar"),V=(0,c.up)("el-aside"),X=(0,c.up)("el-main"),Y=(0,c.up)("el-container");return(0,c.wg)(),(0,c.iD)("div",p,[(0,c.Wm)(Y,null,{default:(0,c.w5)((()=>[(0,c.Wm)(z,{style:{"border-radius":"5px","box-shadow":"darkgrey 5px 10px 30px 3px",position:"relative"}},{default:(0,c.w5)((()=>[(0,c.Wm)(M,null,{default:(0,c.w5)((()=>[(0,c.Wm)(O,{span:24,style:{"padding-top":"10px","font-size":"30px","font-weight":"600","text-align":"left"}},{default:(0,c.w5)((()=>[b])),_:1}),u])),_:1}),(0,c.Wm)(M,{style:{width:"600px","margin-top":"10px"}},{default:(0,c.w5)((()=>[(0,c.Wm)(O,{span:2},{default:(0,c.w5)((()=>[(0,c.Wm)(P,{round:""},{default:(0,c.w5)((()=>[i])),_:1})])),_:1}),(0,c.Wm)(O,{span:8},{default:(0,c.w5)((()=>[(0,c.Wm)(P,{round:""},{default:(0,c.w5)((()=>[d])),_:1})])),_:1}),(0,c.Wm)(O,{span:6},{default:(0,c.w5)((()=>[(0,c.Wm)(P,{round:""},{default:(0,c.w5)((()=>[l])),_:1})])),_:1})])),_:1})])),_:1}),(0,c.Wm)(Y,null,{default:(0,c.w5)((()=>[(0,c.Wm)(V,{style:{"margin-top":"-40px","margin-left":"10px","border-radius":"5px","box-shadow":"darkgrey 5px 10px 30px 3px"}},{default:(0,c.w5)((()=>[(0,c.Wm)(Q,null,{default:(0,c.w5)((()=>[(0,c.Wm)(K,{"default-openeds":["0"]},{default:(0,c.w5)((()=>[(0,c.Wm)(H,{index:"0"},{title:(0,c.w5)((()=>[(0,c.Wm)(L,null,{default:(0,c.w5)((()=>[(0,c.Wm)(I)])),_:1}),r])),default:(0,c.w5)((()=>[(0,c.Wm)(Z,{index:"0-1",onClick:o.java_note1},{default:(0,c.w5)((()=>[v])),_:1},8,["onClick"])])),_:1}),(0,c.Wm)(H,{index:"1"},{title:(0,c.w5)((()=>[(0,c.Wm)(L,null,{default:(0,c.w5)((()=>[(0,c.Wm)(J)])),_:1}),k])),default:(0,c.w5)((()=>[(0,c.Wm)(R,null,{title:(0,c.w5)((()=>[f])),default:(0,c.w5)((()=>[(0,c.Wm)(Z,{index:"1-1"},{default:(0,c.w5)((()=>[h])),_:1}),(0,c.Wm)(Z,{index:"1-2"},{default:(0,c.w5)((()=>[m])),_:1})])),_:1}),(0,c.Wm)(R,{title:"Spring AOP"},{default:(0,c.w5)((()=>[(0,c.Wm)(Z,{index:"1-3"},{default:(0,c.w5)((()=>[g])),_:1})])),_:1})])),_:1}),(0,c.Wm)(H,{index:"2"},{title:(0,c.w5)((()=>[(0,c.Wm)(L,null,{default:(0,c.w5)((()=>[(0,c.Wm)(T)])),_:1}),w])),default:(0,c.w5)((()=>[(0,c.Wm)(Z,{index:"2-1",onClick:o.apache_shiro_note1},{default:(0,c.w5)((()=>[y])),_:1},8,["onClick"]),(0,c.Wm)(Z,{index:"2-2"},{default:(0,c.w5)((()=>[F])),_:1}),(0,c.Wm)(Z,{index:"2-3"},{default:(0,c.w5)((()=>[_])),_:1})])),_:1}),(0,c.Wm)(H,{index:"3"},{title:(0,c.w5)((()=>[(0,c.Wm)(L,null,{default:(0,c.w5)((()=>[(0,c.Wm)(N)])),_:1}),x])),default:(0,c.w5)((()=>[(0,c.Wm)(Z,{index:"3-1"},{default:(0,c.w5)((()=>[S])),_:1}),(0,c.Wm)(Z,{index:"3-2"},{default:(0,c.w5)((()=>[A])),_:1}),(0,c.Wm)(R,{title:"Group 2"},{default:(0,c.w5)((()=>[(0,c.Wm)(Z,{index:"3-3"},{default:(0,c.w5)((()=>[B])),_:1})])),_:1}),(0,c.Wm)(H,{index:"3-4"},{title:(0,c.w5)((()=>[W])),default:(0,c.w5)((()=>[(0,c.Wm)(Z,{index:"3-4-1"},{default:(0,c.w5)((()=>[q])),_:1})])),_:1})])),_:1}),(0,c.Wm)(H,{index:"4"},{title:(0,c.w5)((()=>[(0,c.Wm)(L,null,{default:(0,c.w5)((()=>[(0,c.Wm)(G)])),_:1}),E])),default:(0,c.w5)((()=>[(0,c.Wm)(Z,{index:"4-1"},{default:(0,c.w5)((()=>[j])),_:1}),(0,c.Wm)(Z,{index:"4-2"},{default:(0,c.w5)((()=>[C])),_:1}),(0,c.Wm)(Z,{index:"4-3"},{default:(0,c.w5)((()=>[U])),_:1}),(0,c.Wm)(Z,{index:"4-4"},{default:(0,c.w5)((()=>[D])),_:1})])),_:1})])),_:1})])),_:1})])),_:1}),(0,c.Wm)(X,{style:{"background-color":"#f4f9fb"}},{default:(0,c.w5)((()=>[(0,c._)("div",null,[s.pageComponent?((0,c.wg)(),(0,c.j4)((0,c.LL)(s.pageComponent),{key:0})):(0,c.kq)("",!0)])])),_:1})])),_:1})])),_:1})])}var M={name:"App",data(){return{pageComponent:e(8296).Z}},created(){this.loadPage()},methods:{loadPage(){this.pageComponent=e(8296).Z},java_note1:function(){this.pageComponent=e(5552).Z},apache_shiro_note1:function(){this.pageComponent=e(8296).Z}}},P=e(89);const z=(0,P.Z)(M,[["render",O]]);var I=z,L=e(6598),Z=(0,t.ri)(I);Object.keys(L).forEach((a=>{Z.component(a,L[a])})),Z.use(s.Z),Z.mount("#app")},8296:function(a,n,e){e.d(n,{Z:function(){return h}});var t=e(3396),s=e.p+"img/note2.1.d5f8bc42.jpg",c=e.p+"img/note2.2.db9274ad.png",o=e.p+"img/spring1.256a74a5.png",p=e.p+"img/note2.5.5ef1fd77.jpg",b=e.p+"img/note2.3.c1e172be.jpg",u=e.p+"img/note2.4.870330c7.jpg";const i={class:"mume markdown-preview"},d=(0,t.uE)('<h1 class="mume-header" id="apache-shiro%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB" data-v-3b4e8ceb>Apache Shiro源码阅读</h1><p data-v-3b4e8ceb>最近在腾讯实习参与开发Apache-InLong开源项目，其中负责的模块使用到了apache-shiro对访问权限进行控制，因此顺便把Apache-Shiro部分源码进行阅读。</p><h2 class="mume-header" id="1-authorization%E6%8E%88%E6%9D%83%E6%8E%A5%E5%8F%A3%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6-%E5%92%8C-authentication%E8%AE%A4%E8%AF%81%E7%99%BB%E9%99%86%E5%9F%BA%E7%A1%80" data-v-3b4e8ceb>1. Authorization(授权，接口访问控制) 和 Authentication(认证，登陆)基础</h2><p data-v-3b4e8ceb>Apache-Shiro中对接口访问控制最常用的两种配置是：<code data-v-3b4e8ceb>anno</code>和<code data-v-3b4e8ceb>authc</code>, 其中每种配置都代表一个过滤器，接口如果配置<code data-v-3b4e8ceb>authc</code>表示当前接口需要登录才能访问, <code data-v-3b4e8ceb>anno</code>表示无需什么特殊权限就能够访问. Spring-Boot中具体如何整合Apache-shiro进行权限控制的这里就不在赘述, 我们从入口处看起:</p><pre data-role="codeBlock" data-info="java" class="language-java" data-v-3b4e8ceb>    <span class="token annotation punctuation" data-v-3b4e8ceb>@Bean</span>\n    <span class="token keyword keyword-public" data-v-3b4e8ceb>public</span> <span class="token class-name" data-v-3b4e8ceb>ShiroFilterFactoryBean</span> <span class="token function" data-v-3b4e8ceb>shiroFilter</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>SecurityManager</span> securityManager<span class="token punctuation" data-v-3b4e8ceb>)</span> <span class="token punctuation" data-v-3b4e8ceb>{</span>\n        <span class="token keyword keyword-return" data-v-3b4e8ceb>return</span> inLongShiro<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>getShiroFilter</span><span class="token punctuation" data-v-3b4e8ceb>(</span>securityManager<span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n    <span class="token punctuation" data-v-3b4e8ceb>}</span>\n</pre><p data-v-3b4e8ceb>默认情况下<code data-v-3b4e8ceb>authc</code>对应的过滤器是: <code data-v-3b4e8ceb>org.apache.shiro.web.filter.authc.FormAuthenticationFilter</code>, 点进入源码中会发现这个过滤器的实现类继承了一大堆东西, 一层又一层的, 非常复杂, 但是我们最终的目的就是实现一个<code data-v-3b4e8ceb>Filter</code>接口就行了,<br data-v-3b4e8ceb> 在Apache-Inlong开源项目中我们就自定义了<code data-v-3b4e8ceb>authc</code>的过滤器<code data-v-3b4e8ceb>AuthenticationFilter.class</code></p><pre data-role="codeBlock" data-info="java" class="language-java" data-v-3b4e8ceb>    <span class="token annotation punctuation" data-v-3b4e8ceb>@Override</span>\n    <span class="token keyword keyword-public" data-v-3b4e8ceb>public</span> <span class="token class-name" data-v-3b4e8ceb>ShiroFilterFactoryBean</span> <span class="token function" data-v-3b4e8ceb>getShiroFilter</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>SecurityManager</span> securityManager<span class="token punctuation" data-v-3b4e8ceb>)</span> <span class="token punctuation" data-v-3b4e8ceb>{</span>\n        <span class="token class-name" data-v-3b4e8ceb>ShiroFilterFactoryBean</span> shiroFilterFactoryBean <span class="token operator" data-v-3b4e8ceb>=</span> <span class="token keyword keyword-new" data-v-3b4e8ceb>new</span> <span class="token class-name" data-v-3b4e8ceb>ShiroFilterFactoryBean</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        shiroFilterFactoryBean<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>setSecurityManager</span><span class="token punctuation" data-v-3b4e8ceb>(</span>securityManager<span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        <span class="token comment" data-v-3b4e8ceb>// anon: can be accessed by anyone, authc: only authentication is successful can be accessed</span>\n        <span class="token class-name" data-v-3b4e8ceb>Map</span><span class="token generics" data-v-3b4e8ceb><span class="token punctuation" data-v-3b4e8ceb>&lt;</span><span class="token class-name" data-v-3b4e8ceb>String</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token class-name" data-v-3b4e8ceb>Filter</span><span class="token punctuation" data-v-3b4e8ceb>&gt;</span></span> filters <span class="token operator" data-v-3b4e8ceb>=</span> <span class="token keyword keyword-new" data-v-3b4e8ceb>new</span> <span class="token class-name" data-v-3b4e8ceb>LinkedHashMap</span><span class="token generics" data-v-3b4e8ceb><span class="token punctuation" data-v-3b4e8ceb>&lt;</span><span class="token punctuation" data-v-3b4e8ceb>&gt;</span></span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        filters<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>put</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token string" data-v-3b4e8ceb>&quot;authc&quot;</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token keyword keyword-new" data-v-3b4e8ceb>new</span> <span class="token class-name" data-v-3b4e8ceb>AuthenticationFilter</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        shiroFilterFactoryBean<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>setFilters</span><span class="token punctuation" data-v-3b4e8ceb>(</span>filters<span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        <span class="token class-name" data-v-3b4e8ceb>Map</span><span class="token generics" data-v-3b4e8ceb><span class="token punctuation" data-v-3b4e8ceb>&lt;</span><span class="token class-name" data-v-3b4e8ceb>String</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token class-name" data-v-3b4e8ceb>String</span><span class="token punctuation" data-v-3b4e8ceb>&gt;</span></span> pathDefinitions <span class="token operator" data-v-3b4e8ceb>=</span> <span class="token keyword keyword-new" data-v-3b4e8ceb>new</span> <span class="token class-name" data-v-3b4e8ceb>LinkedHashMap</span><span class="token generics" data-v-3b4e8ceb><span class="token punctuation" data-v-3b4e8ceb>&lt;</span><span class="token punctuation" data-v-3b4e8ceb>&gt;</span></span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        <span class="token comment" data-v-3b4e8ceb>// login, register request</span>\n        pathDefinitions<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>put</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token string" data-v-3b4e8ceb>&quot;/anno/**/*&quot;</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token string" data-v-3b4e8ceb>&quot;anon&quot;</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n\n        <span class="token comment" data-v-3b4e8ceb>// swagger api</span>\n        pathDefinitions<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>put</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token string" data-v-3b4e8ceb>&quot;/doc.html&quot;</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token string" data-v-3b4e8ceb>&quot;anon&quot;</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        pathDefinitions<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>put</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token string" data-v-3b4e8ceb>&quot;/v2/api-docs/**/**&quot;</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token string" data-v-3b4e8ceb>&quot;anon&quot;</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        pathDefinitions<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>put</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token string" data-v-3b4e8ceb>&quot;/webjars/**/*&quot;</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token string" data-v-3b4e8ceb>&quot;anon&quot;</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        pathDefinitions<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>put</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token string" data-v-3b4e8ceb>&quot;/swagger-resources/**/*&quot;</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token string" data-v-3b4e8ceb>&quot;anon&quot;</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        pathDefinitions<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>put</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token string" data-v-3b4e8ceb>&quot;/swagger-resources&quot;</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token string" data-v-3b4e8ceb>&quot;anon&quot;</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n\n        <span class="token comment" data-v-3b4e8ceb>// openapi</span>\n        pathDefinitions<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>put</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token string" data-v-3b4e8ceb>&quot;/openapi/**/*&quot;</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token string" data-v-3b4e8ceb>&quot;anon&quot;</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        pathDefinitions<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>put</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token string" data-v-3b4e8ceb>&quot;/**&quot;</span><span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token string" data-v-3b4e8ceb>&quot;authc&quot;</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        shiroFilterFactoryBean<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>setFilterChainDefinitionMap</span><span class="token punctuation" data-v-3b4e8ceb>(</span>pathDefinitions<span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        <span class="token keyword keyword-return" data-v-3b4e8ceb>return</span> shiroFilterFactoryBean<span class="token punctuation" data-v-3b4e8ceb>;</span>\n    <span class="token punctuation" data-v-3b4e8ceb>}</span>\n\n</pre><p data-v-3b4e8ceb>Apache-Shiro的生命周期从Spring的Configure类中通过注入<code data-v-3b4e8ceb>ShiroFilterFactoryBean</code>类开始, 其初始化需要依赖<code data-v-3b4e8ceb>CredentialsMatcher</code>, <code data-v-3b4e8ceb>SecurityManager</code> 以及自定义的 <code data-v-3b4e8ceb>AuthorizingRealm</code>等类信息, 类之间的聚合关系如下图所示:<br data-v-3b4e8ceb><img src="'+s+'" alt="UML图" data-v-3b4e8ceb><br data-v-3b4e8ceb> 显然可见, ShiroFilterFactoryBean就是一个过滤器链, 里面具体怎么实现靠用户自定义的securityManager等相关类中的逻辑实现.</p><h2 class="mume-header" id="2-%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90shirofilterfactorybean" data-v-3b4e8ceb>2. 深度剖析ShiroFilterFactoryBean</h2><p data-v-3b4e8ceb>先看一下其实现的接口:</p><img src="'+c+'" width="400px/" data-v-3b4e8ceb><p data-v-3b4e8ceb>看到第一个接口<code data-v-3b4e8ceb>FactoryBean</code>相信阅读多Spring源码的童鞋都不会太陌生, 这个时候第一想到的就是看看<code data-v-3b4e8ceb>ShiroFilterFactoryBean</code>中的<code data-v-3b4e8ceb>getObject()</code>方法.</p><blockquote data-v-3b4e8ceb><p data-v-3b4e8ceb>(不熟悉FactoryBean接口的童鞋参考下我的另一篇文章:<a href="./spring/factorybean.md" data-v-3b4e8ceb>关于FactoryBean的那些事</a>)</p></blockquote><p data-v-3b4e8ceb>在<code data-v-3b4e8ceb>getObject</code>方法中会调用<code data-v-3b4e8ceb>createInstance()</code>来初始化一个<code data-v-3b4e8ceb>AbstractShiroFilter</code>实例, 具体的实现类是<code data-v-3b4e8ceb>SpringShiroFilter</code>, 并且将我们自定义的<code data-v-3b4e8ceb>SecurityManager</code>作为参数传递到<code data-v-3b4e8ceb>SpringShrioFilter</code>实例中.<br data-v-3b4e8ceb><img src="'+o+'" width="80%/" data-v-3b4e8ceb><br data-v-3b4e8ceb> 在上图代码的459行: <code data-v-3b4e8ceb>createFilterChainManager()</code>方法中会初始化DefaultFilterChainManager类, 这个类的构造方法最后一行<code data-v-3b4e8ceb>createDefaultFilters(false)</code>中便能够发现Apache-shiro框架中各个默认的过滤器:</p><pre data-role="codeBlock" data-info="java" class="language-java" data-v-3b4e8ceb><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span> <span class="token class-name" data-v-3b4e8ceb>DefaultFilterChainManager</span><span class="token punctuation" data-v-3b4e8ceb>{</span><span class="token punctuation" data-v-3b4e8ceb>}</span>\n    <span class="token keyword keyword-protected" data-v-3b4e8ceb>protected</span> <span class="token keyword keyword-void" data-v-3b4e8ceb>void</span> <span class="token function" data-v-3b4e8ceb>addDefaultFilters</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token keyword keyword-boolean" data-v-3b4e8ceb>boolean</span> init<span class="token punctuation" data-v-3b4e8ceb>)</span> <span class="token punctuation" data-v-3b4e8ceb>{</span>\n        <span class="token keyword keyword-for" data-v-3b4e8ceb>for</span> <span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>DefaultFilter</span> defaultFilter <span class="token operator" data-v-3b4e8ceb>:</span> <span class="token class-name" data-v-3b4e8ceb>DefaultFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>values</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>)</span> <span class="token punctuation" data-v-3b4e8ceb>{</span>\n            <span class="token function" data-v-3b4e8ceb>addFilter</span><span class="token punctuation" data-v-3b4e8ceb>(</span>defaultFilter<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>name</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span> defaultFilter<span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token function" data-v-3b4e8ceb>newInstance</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span> init<span class="token punctuation" data-v-3b4e8ceb>,</span> <span class="token boolean" data-v-3b4e8ceb>false</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n        <span class="token punctuation" data-v-3b4e8ceb>}</span>\n    <span class="token punctuation" data-v-3b4e8ceb>}</span>\n    <span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token punctuation" data-v-3b4e8ceb>.</span>\n<span class="token punctuation" data-v-3b4e8ceb>}</span>\n\n<span class="token keyword keyword-public" data-v-3b4e8ceb>public</span> <span class="token keyword keyword-enum" data-v-3b4e8ceb>enum</span> <span class="token class-name" data-v-3b4e8ceb>DefaultFilter</span> <span class="token punctuation" data-v-3b4e8ceb>{</span>\n    <span class="token function" data-v-3b4e8ceb>anon</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>AnonymousFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>authc</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>FormAuthenticationFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>authcBasic</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>BasicHttpAuthenticationFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>authcBearer</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>BearerHttpAuthenticationFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>logout</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>LogoutFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>noSessionCreation</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>NoSessionCreationFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>perms</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>PermissionsAuthorizationFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>port</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>PortFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>rest</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>HttpMethodPermissionFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>roles</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>RolesAuthorizationFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>ssl</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>SslFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>user</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>UserFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>,</span>\n    <span class="token function" data-v-3b4e8ceb>invalidRequest</span><span class="token punctuation" data-v-3b4e8ceb>(</span><span class="token class-name" data-v-3b4e8ceb>InvalidRequestFilter</span><span class="token punctuation" data-v-3b4e8ceb>.</span><span class="token keyword keyword-class" data-v-3b4e8ceb>class</span><span class="token punctuation" data-v-3b4e8ceb>)</span><span class="token punctuation" data-v-3b4e8ceb>;</span>\n<span class="token punctuation" data-v-3b4e8ceb>}</span>\n</pre><p data-v-3b4e8ceb>以及如何加载我们用户自定义的过滤器:</p><img src="'+p+'" style="max-width:800px;" data-v-3b4e8ceb><p data-v-3b4e8ceb>初始化完成全部过滤器之后<code data-v-3b4e8ceb>ShiroFilterFactoryBean</code> 这个 <strong data-v-3b4e8ceb>Bean</strong> 最终返回的是一个SpringShiroFilter过滤器对象, 因此毫无疑问, 直接找这个类中的<code data-v-3b4e8ceb>doFilter()</code>方法, 看下其具体调用执行逻辑(当然你也可以直接使用IDEA工具打断点, 然后访问某个被过滤器拦截的URL, 这样跟着程序跑一下理解的会更加深刻).</p><p data-v-3b4e8ceb>看一下<code data-v-3b4e8ceb>SpringShiroFilter</code>类结构:</p><img src="'+b+'" style="max-width:400px;" data-v-3b4e8ceb><p data-v-3b4e8ceb>由于<code data-v-3b4e8ceb>SpringShiroFilter</code>中只有一个构造方法, 因此直接往上面继承的类中找<code data-v-3b4e8ceb>doFilter()</code>实现方法, 最终在父类<code data-v-3b4e8ceb>OncePerRequestFilter</code>类中看到了<code data-v-3b4e8ceb>doFilter()</code>的实现:</p><img src="'+u+'" style="max-width:800px;" data-v-3b4e8ceb><p data-v-3b4e8ceb>到此为止Apache-Shiro整个过滤器链路相信基本上彻底清楚了.</p>',23),l=[d];function r(a,n,e,s,c,o){return(0,t.wg)(),(0,t.iD)("div",i,l)}var v={name:"ApacheShiroNote1"},k=e(89);const f=(0,k.Z)(v,[["render",r],["__scopeId","data-v-3b4e8ceb"]]);var h=f},5552:function(a,n,e){e.d(n,{Z:function(){return d}});var t=e(3396);const s={class:"mume markdown-preview"},c=(0,t.uE)('<h2 class="mume-header" id="java%E5%B8%B8%E7%94%A8%E5%8C%85%E5%BD%92%E7%BA%B3">Java常用包归纳</h2><p>knife4j: 集成Swagger的接口生成、管理工具包<br> Apache thrift: 用于可伸缩的跨语言服务开发<br> Apache Lucene: 全文索引检索工具包, Solr就是基于其开发的<br> mapstruct: 类似CommonBeanUtils中的copyProperties()方法，但其能够指定相应的字段映射（<a href="https://mapstruct.org/%EF%BC%89">https://mapstruct.org/）</a><br> metric: 性能监控框架（<a href="https://metrics.dropwizard.io/4.2.0/manual/core.html%EF%BC%89">https://metrics.dropwizard.io/4.2.0/manual/core.html）</a><br> objenesis: 通过类实例化一个对象，类似JDK中Class.newInstance()，其在功能上进行了增强，能够实例化有参构造、有副作用的构造器、抛异常的构造器（<a href="http://objenesis.org/%EF%BC%89">http://objenesis.org/）</a><br> opencsv: 一个操作csv文件的library（<a href="http://opencsv.sourceforge.net/#quick_start">http://opencsv.sourceforge.net/#quick_start</a>)<br> reflections: 获取classpath下的类信息、方法信息、字段信息<br> Apache shiro: 轻量级认证、授权框架<br> snappy-java: 快速的压缩library，通过JNI 调用google sanppy<br> byte-buddy: 操作字节的库<br> jline: 处理控制台输入输出的库<br> HikariCP: 性能最好的连接池</p>',2),o=[c];function p(a,n,e,c,p,b){return(0,t.wg)(),(0,t.iD)("div",s,o)}var b={name:"JavaPackage"},u=e(89);const i=(0,u.Z)(b,[["render",p]]);var d=i}},n={};function e(t){var s=n[t];if(void 0!==s)return s.exports;var c=n[t]={exports:{}};return a[t].call(c.exports,c,c.exports,e),c.exports}e.m=a,function(){var a=[];e.O=function(n,t,s,c){if(!t){var o=1/0;for(i=0;i<a.length;i++){t=a[i][0],s=a[i][1],c=a[i][2];for(var p=!0,b=0;b<t.length;b++)(!1&c||o>=c)&&Object.keys(e.O).every((function(a){return e.O[a](t[b])}))?t.splice(b--,1):(p=!1,c<o&&(o=c));if(p){a.splice(i--,1);var u=s();void 0!==u&&(n=u)}}return n}c=c||0;for(var i=a.length;i>0&&a[i-1][2]>c;i--)a[i]=a[i-1];a[i]=[t,s,c]}}(),function(){e.n=function(a){var n=a&&a.__esModule?function(){return a["default"]}:function(){return a};return e.d(n,{a:n}),n}}(),function(){e.d=function(a,n){for(var t in n)e.o(n,t)&&!e.o(a,t)&&Object.defineProperty(a,t,{enumerable:!0,get:n[t]})}}(),function(){e.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(a){if("object"===typeof window)return window}}()}(),function(){e.o=function(a,n){return Object.prototype.hasOwnProperty.call(a,n)}}(),function(){e.r=function(a){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})}}(),function(){e.p="/"}(),function(){var a={143:0};e.O.j=function(n){return 0===a[n]};var n=function(n,t){var s,c,o=t[0],p=t[1],b=t[2],u=0;if(o.some((function(n){return 0!==a[n]}))){for(s in p)e.o(p,s)&&(e.m[s]=p[s]);if(b)var i=b(e)}for(n&&n(t);u<o.length;u++)c=o[u],e.o(a,c)&&a[c]&&a[c][0](),a[c]=0;return e.O(i)},t=self["webpackChunkherywang_blog"]=self["webpackChunkherywang_blog"]||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))}();var t=e.O(void 0,[998],(function(){return e(2544)}));t=e.O(t)})();
//# sourceMappingURL=app.19819340.js.map